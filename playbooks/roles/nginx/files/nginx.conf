user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
}

http {

	##
	# Paramètres basiques
	##

	# Autoriser l'utilisation de sendfile(2)
	sendfile on;
	# Autorise l'option TCP_NOPUSH sur les socket
	tcp_nopush on;
	# Taille de la hashtabe 'types'
	types_hash_max_size 2048;
	# Désactive l'envoi de la version de nginx.
	server_tokens off;
	# Type par défaut des réponses HTTP
	include /etc/nginx/mime.types;
	default_type application/octet-stream;
	# Customiser page 404 pour cacher celle de nginx
	# Répertoire racine des serveurs
	root /var/www/html;


	##
	# Paramètres des pages d'erreues
	##

	# On customize les pages d'erreurs afin de cacher celles de nginx
	error_page 401 /errors/400.html;
	error_page 401 /errors/401.html;
	error_page 403 /errors/403.html;
	error_page 404 /errors/404.html;
	error_page 405 /errors/405.html;
	error_page 408 /errors/408.html;
	error_page 413 /errors/413.html;
	error_page 414 /errors/414.html;
	error_page 429 /errors/429.html;
	error_page 500 /errors/500.html;
	error_page 502 /errors/502.html;
	error_page 503 /errors/503.html;
	error_page 504 /errors/504.html;
	# Codes d'erreurs customisés pour les erreurs de certificats
	error_page 495 496 497 /errors/400.html;


	##
	# Paramètres des en-têtes
	##

	# On cache l'en tête 'Server'
	more_set_headers 'Server';  
	# Évite les attaques XSS
	add_header X-XSS-Protection "1: mode=block" always; 
	# Évite le 'clickjacking'
	add_header X-Frame_Options "SAMEORIGIN" always;     
	# On n'utilise pas d'API
	add_header Permission-Policy "";                    
	# On précise que tout le contenu du site proviendra de la même origine. 
	add_header Content-Security-Policy "default-src 'none'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; frame-src 'self'; base-uri 'self'; form-action 'self';";
	# Évite le 'sniffing' sur IE et Chrome
	add_header X-Content-Type-Options "nosniff" always; 


	##
	# Paramètres SSL
	##

	# On précise les protocoles SSH acceptés
	ssl_protocols TLSv1.2 TLSv1.3;
	# On force l'utilisation de nos ciphers
	ssl_prefer_server_ciphers on;
	# On précise ciphers acceptés
	ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
	# On active HSTS contre les attaques d'Homme
	add_header Strict-Transport-Security "max-age=63072000" always;
	# On spécifie le certificat et sa clé privée
	ssl_certificate /etc/nginx/ssl/fullchain-nginx.pem;
	ssl_certificate_key /etc/nginx/ssl/nginx.key;
	# On active mTLS
	ssl_client_certificate /etc/nginx/ssl/ca.crt;
	ssl_verify_client on;

	##
	# Logging Settings
	##

	# On logs les accès au services
	access_log /var/log/nginx/access.log;
	# On logs les erreurs avec un niveau de sévérité 'notice'
	error_log /var/log/nginx/error.log notice;

	##
	# Gzip Settings
	##

	gzip on;

	##
	# Configurations supplémentaires
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}

- name: Installation d'OpenSSH Server et Google Authenticator
  ansible.builtin.apt:
    name:
      - openssh-server
      - libpam-google-authenticator
    state: present
    update_cache: yes
  become: yes

- name: Déploiement de la configuration SSH
  ansible.builtin.template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: '0644'
  notify: Restart SSH
  become: yes

- name: Vérification que pam_google_authenticator est dans la config PAM
  ansible.builtin.lineinfile:
    path: /etc/pam.d/sshd
    regexp: '^auth required pam_google_authenticator.so'
    line: 'auth required pam_google_authenticator.so'
    state: present
    create: yes
  become: yes

- name: Vérification que le service SSH est actif et démarré
  ansible.builtin.service:
    name: ssh
    state: started
    enabled: true

- name: Création du groupe TOPGUN
  ansible.builtin.group:
    name: TOPGUN
  become: yes

- name: Création d'utilisateurs
  ansible.builtin.user:
    name: "{{ item.name }}"
    group: TOPGUN
    shell: /bin/bash
    create_home: yes
    state: present
  loop:
    - { name: 'maverik' }
    - { name: 'charlie' }
    - { name: 'goose' }
  become: yes

- name: Mise en place de sudoers pour les utilisateurs
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/{{ item.name }}"
    content: "{{ item.rule }}"
    mode: '0440'
  loop:
    - { name: 'maverik', rule: 'maverik ALL=(ALL) NOPASSWD: /sbin/reboot, /usr/bin/apt update, /usr/bin/apt upgrade' }
    - { name: 'charlie', rule: 'charlie ALL=(ALL) ALL' }
  notify: Restart SSH
  become: yes

- name: Restriction des accès SSH à l'utilisateur goose
  ansible.builtin.user:
    name: goose
    shell: /usr/sbin/nologin
  become: yes
